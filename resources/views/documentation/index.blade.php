<x-guest-layout>
    <div class="py-4 bg-gray-100 dark:bg-gray-900">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-12 gap-x-8">
                <div id="toc-container" class="col-span-12 sm:col-span-4 lg:col-span-3">
                    <div class="sticky top-24 bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
                        <h2 class="text-xl px-6 font-bold my-4 text-indigo-600 dark:text-indigo-400 flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
                                 stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M4 6h16M4 12h16M4 18h7"/>
                            </svg>
                            Table of Contents
                        </h2>
                        <div class="border-t border-gray-200 dark:border-gray-700 my-3"></div>
                        <div id="toc" class="space-y-3 px-6 mb-3 text-sm max-h-[70vh] overflow-y-auto pr-2">
                            <!-- Table of contents will be generated by JavaScript -->
                        </div>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="bg-white col-span-12 sm:col-span-8 lg:col-span-9 dark:bg-gray-800 p-8 rounded-lg shadow-lg">
                    <div id="documentation-content" class="prose dark:prose-invert max-w-none">
                        {!! $businessGuide !!}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Find all headings in the documentation content
            const content = document.getElementById('documentation-content');
            const headings = content.querySelectorAll('h1, h2');
            const toc = document.getElementById('toc');

            // Clear any existing TOC content
            toc.innerHTML = '';

            // Generate table of contents
            headings.forEach((heading, index) => {
                // Create a unique ID for each heading if it doesn't have one
                if (!heading.id) {
                    heading.id = 'heading-' + index;
                }

                const tagName = heading.tagName.toLowerCase();
                const level = parseInt(tagName.charAt(1)) - 1; // h1 = 0, h2 = 1, etc.

                // Create TOC entry with appropriate indentation
                const tocEntry = document.createElement('a');
                tocEntry.href = '#' + heading.id;
                tocEntry.textContent = heading.textContent;
                tocEntry.classList.add(
                    'block',
                    'py-1.5',
                    'hover:text-indigo-600',
                    'dark:hover:text-indigo-400',
                    'transition-all',
                    'hover:translate-x-1',
                    'duration-200'
                );

                // Add padding based on heading level for indentation
                tocEntry.style.paddingLeft = (level * 0.75) + 'rem';

                // Add font weight and style based on level
                if (level === 0) {
                    tocEntry.classList.add('font-bold', 'text-md');
                } else if (level === 1) {
                    tocEntry.classList.add('font-medium');
                }

                // Highlight current section when scrolling
                tocEntry.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelector(this.getAttribute('href')).scrollIntoView({
                        behavior: 'smooth'
                    });
                });

                toc.appendChild(tocEntry);
            });
        });
    </script>
</x-guest-layout>
